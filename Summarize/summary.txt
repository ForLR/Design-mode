优先用依赖关系 而不是使用继承（强依赖）


建造型设计模式：
单例：用于 保证全局唯一实例   三种方式  双重if加lock锁是懒汉式  利用静态字段或者静态构造函数创建的是饿汉式
工厂：指定参数创建不同的实例


结构型设计模式：
适配器：添加新类 在继承新需求的要求下  实现是调用旧接口的实现用以旧功能可以在新需求中使用    
代理：实现交由代理类  具体实现还是依赖提供者
装饰器： 解决不能多继承或者不改动源码添加新功能 动态的添加行为或组合对象的行为  继承和组合相结合